(Days of a month)

Write a program that prompts the user to enter a year and the first three letters of a month name (with the first letter in uppercase) and displays the number of days in the month.

If the input for month is incorrect, display a message as shown in the following sample run.


Sample Run 1

Enter a year: 2001
Enter a month: Jan
Jan 2001 has 31 days

﻿Sample Run 2

Enter a year: 2016
Enter a month: Feb
Feb 2016 has 29 days
﻿
Sample Run 3

Enter a year: 2016
Enter a month: jan
jan is not a correct month name

Class Name: Exercise04_17

If you get a logical or runtime error, please refer https://liveexample.pearsoncmg.com/faq.html.

import java.util.Scanner;
public class Exercise04_17 {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
    System.out.print("Enter a year: ");
    int year = input.nextInt();
    System.out.print("Enter a month (first three letters with the first letter in uppercase): ");
    String month = input.next();
    
    if (month.equals("Jan") || month.equals("Mar") || month.equals("May")
        || month.equals("Jul") || month.equals("Aug") || month.equals("Oct") || month.equals("Dec"))
      System.out.print(month + " " + year + " has 31 days");
    else if (month.equals("Apr") || month.equals("Jun") || month.equals("Sep") || month.equals("Nov"))
      System.out.print(month + " " + year + " has 30 days");
    else if (month.equals("Feb"))
      if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0))
        System.out.print(month + " " + year + " has 29 days");
      else
        System.out.print(month + " " + year + " has 28 days");
    else
      System.out.print(month + " is not a correct month name ");
  }
}
